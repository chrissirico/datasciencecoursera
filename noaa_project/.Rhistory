everything()
)
cost_per_event <- storm
multiplier <- function(x){
x <- as.character(x)
ifelse(x == "B" | x == "b", as.numeric(1000000000),
ifelse(x == "M" | x == "m", as.numeric(1000000),
ifelse(x == "K" | x == "k", as.numeric(1000),
ifelse(x == "H" | x == "h", as.numeric(100),
ifelse(x == "[0-8]", as.numeric(10),
ifelse(x == "+", as.numeric(1),
ifelse(x == "\\?", as.numeric(0), 0)
)
)
)
)
)
)
}
cost_per_event$CROPDMGEXP <- multiplier(cost_per_event$CROPDMGEXP)
cost_per_event$PROPDMGEXP <- multiplier(cost_per_event$PROPDMGEXP)
cost_per_event$CROPDMGEXP[is.na(cost_per_event$CROPDMGEXP)] <- 0
cost_per_event$PROPDMGEXP[is.na(cost_per_event$PROPDMGEXP)] <- 0
cost_per_event <- cost_per_event %>%
mutate(prop_cost = PROPDMG * PROPDMGEXP,
crop_cost = CROPDMG * CROPDMGEXP,
cost = prop_cost + crop_cost) %>%
group_by(EVTYPE) %>%
summarize(prop_cost = sum(prop_cost),
crop_cost = sum(crop_cost),
cost = sum(cost),
count = n()
) %>%
mutate(
prop_cost_per = round(prop_cost / count, digits = 15),
crop_cost_per = round(crop_cost / count, digits = 15),
cost_per = crop_cost_per + prop_cost_per
) %>%
arrange(desc(cost)) %>%
select(EVTYPE,
cost,
prop_cost,
crop_cost,
count,
prop_cost_per,
crop_cost_per,
cost_per,
everything()
)
threshold <- .95*sum(cost_per_event[["cost"]])
stack_data_econ <- cost_per_event %>%
filter(cost >= 250 | count >= 5 ) %>%    #  Exclude infrequent events
mutate(cumulative_cost = cumsum(cost),
cumulative_prop = cumsum(prop_cost),
cumulative_crop = cumsum(crop_cost)) %>%
# filter small costs below threshold
filter(cumulative_cost <= threshold) %>%
select(
prop_cost,
crop_cost,
costs,
cumulative_cost,
cumulative_prop,
cumulative_crop,
count,
everything()
)
stack_data_econ <- cost_per_event %>%
filter(cost >= 250 | count >= 5 ) %>%    #  Exclude infrequent events
mutate(cumulative_cost = cumsum(cost),
cumulative_prop = cumsum(prop_cost),
cumulative_crop = cumsum(crop_cost)) %>%
# filter small costs below threshold
filter(cumulative_cost <= threshold) %>%
select(
prop_cost,
crop_cost,
cost,
cumulative_cost,
cumulative_prop,
cumulative_crop,
count,
everything()
)
stack_data_econ$EVTYPE <- forcats::fct_reorder(stack_data_econ$EVTYPE,
stack_data_econ$cost,
.desc = TRUE)
stack_data_econ <- stack_data_econ %>%
gather(key = cost_type, value = costs, prop_cost, crop_cost) %>%
select(cost_type,
costs,
cumulative_cost,
cumulative_prop,
cumulative_crop,
everything(),
-count
) %>% View()
threshold <- .95*sum(cost_per_event[["cost"]])
stack_data_econ <- cost_per_event %>%
filter(cost >= 250 | count >= 5 ) %>%    #  Exclude infrequent events
mutate(cumulative_cost = cumsum(cost),
cumulative_prop = cumsum(prop_cost),
cumulative_crop = cumsum(crop_cost)) %>%
# filter small costs below threshold
filter(cumulative_cost <= threshold) %>%
select(
prop_cost,
crop_cost,
cost,
cumulative_cost,
cumulative_prop,
cumulative_crop,
count,
everything()
)
stack_data_econ$EVTYPE <- forcats::fct_reorder(stack_data_econ$EVTYPE,
stack_data_econ$cost,
.desc = TRUE)
stack_data_econ <- stack_data_econ %>%
gather(key = cost_type, value = costs, prop_cost, crop_cost) %>%
select(cost_type,
costs,
cumulative_cost,
cumulative_prop,
cumulative_crop,
everything(),
-count
) %>%
arrange(EVTYPE)
View(stack_data_econ)
ggplot(stack_data_econ) +
geom_col(aes(
x = EVTYPE,
y = costs,
fill = cost_type
)) +
# Vertical x labels
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
labs(
title = "Tornadoes, heat and floods cause most weather casualties",
subtitle = "Categories shown below account for ~95% of weather-related deaths 1980-2011",
x = "Event type",
y = "Cost",
fill = NULL
) +
scale_fill_manual(
# labels = c("Injuries", "Deaths"),
values=c("#f4d442", "#d10c02"))
warnings()
cost_per_event <- storm
multiplier <- function(x){
x <- as.character(x)
ifelse(x == "B" | x == "b", as.numeric(1000000000),
ifelse(x == "M" | x == "m", as.numeric(1000000),
ifelse(x == "K" | x == "k", as.numeric(1000),
ifelse(x == "H" | x == "h", as.numeric(100),
ifelse(x == "[0-8]", as.numeric(10),
ifelse(x == "+", as.numeric(1),
ifelse(x == "\\?", as.numeric(0), 0)
)
)
)
)
)
)
}
cost_per_event$CROPDMGEXP <- multiplier(cost_per_event$CROPDMGEXP)
cost_per_event$PROPDMGEXP <- multiplier(cost_per_event$PROPDMGEXP)
cost_per_event$CROPDMGEXP[is.na(cost_per_event$CROPDMGEXP)] <- 0
cost_per_event$PROPDMGEXP[is.na(cost_per_event$PROPDMGEXP)] <- 0
cost_per_event <- cost_per_event %>%
mutate(prop_cost = PROPDMG * PROPDMGEXP,
crop_cost = CROPDMG * CROPDMGEXP,
cost = prop_cost + crop_cost) %>%
group_by(EVTYPE) %>%
summarize(prop_cost = sum(prop_cost),
crop_cost = sum(crop_cost),
cost = sum(cost),
count = n()
) %>%
mutate(
prop_cost_per = round(prop_cost / count, digits = 15),
crop_cost_per = round(crop_cost / count, digits = 15),
cost_per = crop_cost_per + prop_cost_per
) %>%
arrange(desc(cost)) %>%
select(EVTYPE,
cost,
prop_cost,
crop_cost,
count,
prop_cost_per,
crop_cost_per,
cost_per,
everything()
)
threshold <- .95*sum(cost_per_event[["cost"]])
stack_data_econ <- cost_per_event %>%
filter(cost >= 250 | count >= 5 ) %>%    #  Exclude infrequent events
mutate(cumulative_cost = cumsum(cost),
cumulative_prop = cumsum(prop_cost),
cumulative_crop = cumsum(crop_cost)) %>%
# filter small costs below threshold
filter(cumulative_cost <= threshold) %>%
select(
prop_cost,
crop_cost,
cost,
cumulative_cost,
cumulative_prop,
cumulative_crop,
count,
everything()
)
stack_data_econ$EVTYPE <- forcats::fct_reorder(stack_data_econ$EVTYPE,
stack_data_econ$cost,
.desc = TRUE)
stack_data_econ <- stack_data_econ %>%
gather(key = cost_type, value = costs, prop_cost, crop_cost) %>%
select(cost_type,
costs,
cumulative_cost,
cumulative_prop,
cumulative_crop,
everything(),
-count
) %>%
arrange(EVTYPE)
stack_data_econ$cost_type <- as.factor(stack_data_econ$cost_type)
stack_data_econ$cost_type <- factor(stack_data_econ$cost_type,
levels=rev(levels(stack_data_econ$cost_type)))
ggplot(stack_data_econ) +
geom_col(aes(
x = EVTYPE,
y = costs,
fill = cost_type
)) +
# Vertical x labels
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
labs(
title = "Tornadoes, heat and floods cause most weather casualties",
subtitle = "Categories shown below account for ~95% of weather-related deaths 1980-2011",
x = "Event type",
y = "Cost",
fill = NULL
) +
scale_fill_manual(
# labels = c("Injuries", "Deaths"),
values=c("#f4d442", "#d10c02"))
ggplot(stack_data_econ) +
geom_col(aes(
x = EVTYPE,
y = costs,
fill = cost_type
)) +
# Vertical x labels
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
labs(
title = "Floods are most expensive weather event",
subtitle = "Categories shown below account for ~95% of weather-related economic costs 1980-2011",
x = "Event type",
y = "Cost",
fill = NULL
) +
scale_fill_manual(
# labels = c("Property damage", "Crop loss"),
values=c("#e8d16a", "#875e3b"))
warnings()
# plot events accounting for 95% (or other threshold proportion) of economic cost
# set threshold for proportion of deaths to account for in plot
threshold <- .95*sum(cost_per_event[["cost"]])
# Prep for stacked bar plot
stack_data_econ <- cost_per_event %>%
filter(cost >= 250 | count >= 5 ) %>%    #  Exclude infrequent events
mutate(cumulative_cost = cumsum(cost),
cumulative_prop = cumsum(prop_cost),
cumulative_crop = cumsum(crop_cost)) %>%
# filter small costs below threshold
filter(cumulative_cost <= threshold) %>%
select(
prop_cost,
crop_cost,
cost,
cumulative_cost,
cumulative_prop,
cumulative_crop,
count,
everything()
)
# Order by cost
stack_data_econ$EVTYPE <- forcats::fct_reorder(stack_data_econ$EVTYPE,
stack_data_econ$cost,
.desc = TRUE)
# Gather deaths and injuries
stack_data_econ <- stack_data_econ %>%
gather(key = cost_type, value = costs, prop_cost, crop_cost) %>%
select(cost_type,
costs,
cumulative_cost,
cumulative_prop,
cumulative_crop,
everything(),
-count
) %>%
arrange(EVTYPE)
# make cost type a factor
stack_data_econ$cost_type <- as.factor(stack_data_econ$cost_type)
# reverse factor level order for casualty type (deaths as bottom of stacked bars)
stack_data_econ$cost_type <- factor(stack_data_econ$cost_type,
levels=rev(levels(stack_data_econ$cost_type)))
# plot
ggplot(stack_data_econ) +
geom_col(aes(
x = EVTYPE,
y = costs,
fill = cost_type
)) +
# Vertical x labels
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
labs(
title = "Floods are most expensive weather event",
subtitle = "Categories shown below account for ~95% of weather-related economic costs 1980-2011",
x = "Event type",
y = "Cost",
fill = NULL
) +
scale_fill_manual(
# labels = c("Property damage", "Crop loss"),
values=c("#e8d16a", "#875e3b"))
# plot events accounting for 95% (or other threshold proportion) of economic cost
# set threshold for proportion of deaths to account for in plot
threshold <- .95*sum(cost_per_event[["cost"]])
# Prep for stacked bar plot
stack_data_econ <- cost_per_event %>%
filter(cost >= 250 | count >= 5 ) %>%    #  Exclude infrequent events
mutate(cumulative_cost = cumsum(cost),
cumulative_prop = cumsum(prop_cost),
cumulative_crop = cumsum(crop_cost)) %>%
# filter small costs below threshold
filter(cumulative_cost <= threshold) %>%
select(
prop_cost,
crop_cost,
cost,
cumulative_cost,
cumulative_prop,
cumulative_crop,
count,
everything()
)
# Order by cost
stack_data_econ$EVTYPE <- forcats::fct_reorder(stack_data_econ$EVTYPE,
stack_data_econ$cost,
.desc = TRUE)
# Gather deaths and injuries
stack_data_econ <- stack_data_econ %>%
gather(key = cost_type, value = costs, prop_cost, crop_cost) %>%
select(cost_type,
costs,
cumulative_cost,
cumulative_prop,
cumulative_crop,
everything(),
-count
) %>%
arrange(EVTYPE)
# make cost type a factor
stack_data_econ$cost_type <- as.factor(stack_data_econ$cost_type)
# reverse factor level order for casualty type (deaths as bottom of stacked bars)
stack_data_econ$cost_type <- factor(stack_data_econ$cost_type,
levels=rev(levels(stack_data_econ$cost_type)))
# plot
ggplot(stack_data_econ) +
geom_col(aes(
x = EVTYPE,
y = costs,
fill = cost_type
)) +
# Vertical x labels
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
labs(
title = "Floods are most expensive weather event",
subtitle = "Categories shown below account for ~95% of weather-related economic costs 1980-2011",
x = "Event type",
y = "Cost",
fill = NULL
) +
scale_fill_manual(
labels = c("Property damage", "Crop loss"),
values=c("#89aac6", "#7a715e"))
# plot events accounting for 95% (or other threshold proportion) of economic cost
# set threshold for proportion of deaths to account for in plot
threshold <- .95*sum(cost_per_event[["cost"]])
# Prep for stacked bar plot
stack_data_econ <- cost_per_event %>%
filter(cost >= 250 | count >= 5 ) %>%    #  Exclude infrequent events
mutate(cumulative_cost = cumsum(cost),
cumulative_prop = cumsum(prop_cost),
cumulative_crop = cumsum(crop_cost)) %>%
# filter small costs below threshold
filter(cumulative_cost <= threshold) %>%
select(
prop_cost,
crop_cost,
cost,
cumulative_cost,
cumulative_prop,
cumulative_crop,
count,
everything()
)
# Order by cost
stack_data_econ$EVTYPE <- forcats::fct_reorder(stack_data_econ$EVTYPE,
stack_data_econ$cost,
.desc = TRUE)
# Gather deaths and injuries
stack_data_econ <- stack_data_econ %>%
gather(key = cost_type, value = costs, prop_cost, crop_cost) %>%
select(cost_type,
costs,
cumulative_cost,
cumulative_prop,
cumulative_crop,
everything(),
-count
) %>%
arrange(EVTYPE)
# make cost type a factor
stack_data_econ$cost_type <- as.factor(stack_data_econ$cost_type)
# reverse factor level order for casualty type (deaths as bottom of stacked bars)
stack_data_econ$cost_type <- factor(stack_data_econ$cost_type,
levels=rev(levels(stack_data_econ$cost_type)))
# plot
ggplot(stack_data_econ) +
geom_col(aes(
x = EVTYPE,
y = costs,
fill = cost_type
)) +
# Vertical x labels
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
labs(
title = "Floods are most expensive weather event",
subtitle = "Categories shown below account for ~95% of weather-related economic costs 1980-2011",
x = "Event type",
y = "Cost",
fill = NULL
) +
scale_fill_manual(
labels = c("Property damage", "Crop loss"),
values=c("#89aac6", "#7a715e"))
# plot events accounting for 95% (or other threshold proportion) of economic cost
# set threshold for proportion of deaths to account for in plot
threshold <- .95*sum(cost_per_event[["cost"]])
# Prep for stacked bar plot
stack_data_econ <- cost_per_event %>%
filter(cost >= 250 | count >= 5 ) %>%    #  Exclude infrequent events
mutate(cumulative_cost = cumsum(cost),
cumulative_prop = cumsum(prop_cost),
cumulative_crop = cumsum(crop_cost)) %>%
# filter small costs below threshold
filter(cumulative_cost <= threshold) %>%
select(
prop_cost,
crop_cost,
cost,
cumulative_cost,
cumulative_prop,
cumulative_crop,
count,
everything()
)
# Order by cost
stack_data_econ$EVTYPE <- forcats::fct_reorder(stack_data_econ$EVTYPE,
stack_data_econ$cost,
.desc = TRUE)
# Gather deaths and injuries
stack_data_econ <- stack_data_econ %>%
gather(key = cost_type, value = costs, prop_cost, crop_cost) %>%
select(cost_type,
costs,
cumulative_cost,
cumulative_prop,
cumulative_crop,
everything(),
-count
) %>%
arrange(EVTYPE)
# make cost type a factor
stack_data_econ$cost_type <- as.factor(stack_data_econ$cost_type)
# reverse factor level order for casualty type (deaths as bottom of stacked bars)
# stack_data_econ$cost_type <- factor(stack_data_econ$cost_type,
#                                          levels=rev(levels(stack_data_econ$cost_type)))
# plot
ggplot(stack_data_econ) +
geom_col(aes(
x = EVTYPE,
y = costs,
fill = cost_type
)) +
# Vertical x labels
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
labs(
title = "Floods are most expensive weather event",
subtitle = "Categories shown below account for ~95% of weather-related economic costs 1980-2011",
x = "Event type",
y = "Cost",
fill = NULL
) +
scale_fill_manual(
labels = c("Property damage", "Crop loss"),
values=c("#89aac6", "#7a715e"))
